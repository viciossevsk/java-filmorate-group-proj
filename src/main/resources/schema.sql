DROP TABLE IF EXISTS GENRE CASCADE;
DROP TABLE IF EXISTS RATING CASCADE;
DROP TABLE IF EXISTS FILM CASCADE;
DROP TABLE IF EXISTS GENRE_FILM CASCADE;
DROP TABLE IF EXISTS USERS CASCADE;
DROP TABLE IF EXISTS FILM_LIKES CASCADE;
DROP TABLE IF EXISTS FRIENDSHIP CASCADE;

CREATE TABLE IF NOT EXISTS PUBLIC.GENRE
(
    GENRE_ID
    INTEGER
    GENERATED
    BY
    DEFAULT AS
    IDENTITY
    PRIMARY
    KEY,
    NAME
    VARCHAR
(
    255
) NOT NULL
    );

CREATE TABLE IF NOT EXISTS PUBLIC.RATING
(
    RATING_ID
    INTEGER
    GENERATED
    BY
    DEFAULT AS
    IDENTITY
    PRIMARY
    KEY,
    NAME
    VARCHAR
(
    255
) NOT NULL
    );

CREATE TABLE IF NOT EXISTS PUBLIC.FILM
(
    FILM_ID
    INTEGER
    GENERATED
    BY
    DEFAULT AS
    IDENTITY
    PRIMARY
    KEY,
    NAME
    VARCHAR
(
    255
) NOT NULL,
    DESCRIPTION VARCHAR
(
    255
) NOT NULL,
    RELEASE_DATE DATE NOT NULL,
    DURATION INTEGER NOT NULL,
    RATING_ID INTEGER NOT NULL REFERENCES RATING
(
    RATING_ID
) ON DELETE RESTRICT
    );

CREATE TABLE IF NOT EXISTS PUBLIC.GENRE_FILM
(
    GENRE_FILM_ID
    INTEGER
    GENERATED
    BY
    DEFAULT AS
    IDENTITY
    PRIMARY
    KEY,
    FILM_ID
    INTEGER
    NOT
    NULL
    REFERENCES
    FILM
(
    FILM_ID
) ON DELETE CASCADE,
    GENRE_ID INTEGER NOT NULL REFERENCES GENRE
(
    GENRE_ID
) ON DELETE CASCADE
    );
CREATE UNIQUE INDEX IF NOT EXISTS GENRE_FILM_FILM_ID_IDX ON PUBLIC.GENRE_FILM (FILM_ID,GENRE_ID);

CREATE TABLE IF NOT EXISTS PUBLIC.USERS
(
    USERS_ID
    INTEGER
    GENERATED
    BY
    DEFAULT AS
    IDENTITY
    PRIMARY
    KEY,
    EMAIL
    VARCHAR
(
    255
) NOT NULL,
    LOGIN VARCHAR
(
    255
) NOT NULL,
    NAME VARCHAR
(
    255
) NOT NULL,
    BIRTHDAY DATE NOT NULL
    );

CREATE TABLE IF NOT EXISTS PUBLIC.FILM_LIKES
(
    FILM_LIKES_ID
    INTEGER
    GENERATED
    BY
    DEFAULT AS
    IDENTITY
    PRIMARY
    KEY,
    FILM_ID
    INTEGER
    NOT
    NULL
    REFERENCES
    FILM
(
    FILM_ID
) ON DELETE CASCADE,
    USERS_ID INTEGER NOT NULL REFERENCES USERS
(
    USERS_ID
) ON DELETE CASCADE
    );

CREATE UNIQUE INDEX IF NOT EXISTS FILM_LIKES_USERS_ID_IDX ON PUBLIC.FILM_LIKES (USERS_ID,FILM_ID);

CREATE TABLE IF NOT EXISTS PUBLIC.FRIENDSHIP
(
    FRIENDSHIP_ID
    INTEGER
    GENERATED
    BY
    DEFAULT AS
    IDENTITY
    PRIMARY
    KEY,
    USER_ID
    INTEGER
    NOT
    NULL
    REFERENCES
    USERS
(
    USERS_ID
) ON DELETE CASCADE,
    FRIEND_USER_ID INTEGER NOT NULL REFERENCES USERS
(
    USERS_ID
) ON DELETE CASCADE
    );
CREATE UNIQUE INDEX IF NOT EXISTS FRIENDSHIP_USER_ID_IDX ON PUBLIC.FRIENDSHIP (USER_ID,FRIEND_USER_ID);

DELETE
FROM FRIENDSHIP;
ALTER TABLE FRIENDSHIP
    ALTER COLUMN FRIENDSHIP_ID RESTART WITH 1;
DELETE
FROM FILM_LIKES;
ALTER TABLE FILM_LIKES
    ALTER COLUMN FILM_LIKES_ID RESTART WITH 1;
DELETE
FROM GENRE_FILM;
ALTER TABLE GENRE_FILM
    ALTER COLUMN GENRE_FILM_ID RESTART WITH 1;
DELETE
FROM USERS;
ALTER TABLE USERS
    ALTER COLUMN users_id RESTART WITH 1;
DELETE
FROM GENRE;
ALTER TABLE GENRE
    ALTER COLUMN genre_id RESTART WITH 1;
DELETE
FROM FILM;
ALTER TABLE FILM
    ALTER COLUMN film_id RESTART WITH 1;
DELETE
FROM RATING;
ALTER TABLE RATING
    ALTER COLUMN rating_id RESTART WITH 1;


INSERT INTO RATING (name)
values ('G'),
       ('PG'),
       ('PG-13'),
       ('R'),
       ('NC-17');

INSERT INTO GENRE (name)
values ('Комедия'),
       ('Драма'),
       ('Мультфильм'),
       ('Триллер'),
       ('Документальный'),
       ('Боевик');
